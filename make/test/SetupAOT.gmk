#
# Copyright (c) 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

include MakeIncludeStart.gmk
ifeq ($(INCLUDE), true)

################################################################################
# Helper function for creating a customized AOT cache for running tests
################################################################################

# Parameter 1 is the name of the rule.
#
# Remaining parameters are named arguments.
#   VM_OPTIONS  List of JVM arguments to use when creating AOT cache
#
#  After calling this, the following variables are defined
#   $1_AOT_TARGETS   List of all targets that the test rule will need to depend on
#   $1_AOT_JDK_CACHE The AOT cache file to be used to run the test with
#
SetupAot = $(NamedParamsMacroTemplate)
define SetupAotBody
  $1_AOT_JDK_CONF  := $$($1_TEST_SUPPORT_DIR)/aot/jdk.aotconf
  $1_AOT_JDK_CACHE := $$($1_TEST_SUPPORT_DIR)/aot/jdk.aotcache
  $1_AOT_JDK_LOG   := $$($1_TEST_SUPPORT_DIR)/aot/ExerciseJDKClasses.log

  # We execute the training run with $(TEST_IMAGE_DIR)/jtreg_setup_aot/ExerciseJDKClasses.class
  # to touch a fair number of classes inside the JDK. Note that we can't specify a classpath,
  # or else the AOT cache cannot be used with jtreg test cases that use a different value
  # for their classpaths. Instead, we run in the $(TEST_IMAGE_DIR)/jtreg_setup_aot/ directory.
  # The "java" launcher will have an implicit classpath of ".", so it can pick up the ExerciseJDKClasses
  # class from the JVM's current directory.
  #
  # The ExerciseJDKClasses class (or any other classes that are loaded from ".") will be excluded
  # from the the AOT cache as "." is an unsupported location. As a result, the AOT cache will contain
  # only classes from the JDK.

  $$($1_AOT_JDK_CACHE): $$(JDK_IMAGE_DIR)/release
	$$(call MakeDir, $$($1_TEST_SUPPORT_DIR)/aot)

	$$(call LogWarn, AOT: Create cache configuration) \
	$$(call ExecuteWithLog, $$($1_TEST_SUPPORT_DIR)/aot, ( \
	    $(CD) $(TEST_IMAGE_DIR)/jtreg_setup_aot; \
	    $$(FIXPATH) $(JDK_UNDER_TEST)/bin/java $$($1_VM_OPTIONS) \
	        -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CONF).log  -Xlog:cds*=error \
	        -XX:AOTMode=record -XX:AOTConfiguration=$$($1_AOT_JDK_CONF) \
	        ExerciseJDKClasses > $$($1_AOT_JDK_LOG) \
	))

	$$(call LogWarn, AOT: Generate AOT cache $$($1_AOT_JDK_CACHE) with flags: $$($1_VM_OPTIONS))
	$$(call ExecuteWithLog, $$($1_TEST_SUPPORT_DIR)/aot, ( \
	    $$(FIXPATH) $(JDK_UNDER_TEST)/bin/java \
	        $$($1_VM_OPTIONS) -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CACHE).log -Xlog:cds*=error \
	        -XX:ExtraSharedClassListFile=$(JDK_UNDER_TEST)/lib/classlist \
	        -XX:AOTMode=create -XX:AOTConfiguration=$$($1_AOT_JDK_CONF) -XX:AOTCache=$$($1_AOT_JDK_CACHE) \
	))

  $1_AOT_TARGETS += $$($1_AOT_JDK_CACHE)

endef

endif # include guard
include MakeIncludeEnd.gmk
